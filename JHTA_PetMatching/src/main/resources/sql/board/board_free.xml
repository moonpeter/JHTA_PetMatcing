<?xml version="1.0" encoding="UTF-8" ?><!-- SQL 맵퍼 파일은 xml이기 때문에 제일 먼저 xml 
	선언이 옵니다. -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"  
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="Boards">

	<select id="count" resultType="int">
		select count(*) from free_board
	</select>

	<select id="list" parameterType="java.util.Map"
		resultType="board">
		select * from
		( select rownum rnum, b.*
		from
		(select free_board.* ,(select count(*) as cnt from freeboard_comments where
		freeboard_comments.board_num=free_board.board_num) as cnt
		from free_board
		order by BOARD_RE_REF desc,
		BOARD_RE_SEQ asc) b
		)
		where rnum &gt;= #{start} and rnum &lt;= #{end}
	</select>


	<select id="getSearchList" parameterType="map"
		resultType="board">
		select *
		from
		(select rownum rnum, b.*
		from
		(select *
		from free_board

		<include refid="search" />
		)b
		)
		where rnum &gt;=#{start} and rnum &lt;= #{end}
	</select>

	<select id="searchCount" parameterType="map" resultType="int">
		select count(*)
		from free_board
		<include refid="search" />
	</select>

	<!-- <sql id="search"> <if test="search_field!=null"> and <foreach collection="search_field" 
		separator="or" item="index"> <choose> <when test='index=="S"'>subject</when> 
		<when test='index=="C"'>content</when> <when test='index=="W"'>writer</when> 
		<when test='index=="SC"'>subject+content</when> </choose> like #{search_word} 
		</foreach> </if> </sql> -->

	<sql id="search">
		<if test="search_field!=null">
			where
			<foreach collection="search_field" separator="or"
				item="index">
				<choose>
					<when test="index=='S'.toString()">BOARD_SUBJECT</when>
					<when test="index=='C'.toString()">BOARD_CONTENT</when>
					<when test="index=='W'.toString()">BOARD_NAME</when>
				</choose>
				like #{search_word}
			</foreach>
		</if>
	</sql>

	<insert id="insert" parameterType="board">
		<selectKey resultType="int" order="BEFORE"
			keyProperty="BOARD_NUM">
			select nvl(max(BOARD_NUM),0)+1 from free_board
		</selectKey>
		insert into free_board
		(BOARD_NUM, BOARD_NAME, BOARD_PASS,
		BOARD_SUBJECT,
		BOARD_CONTENT, BOARD_FILE, BOARD_ORIGINAL,
		BOARD_RE_REF,
		BOARD_RE_LEV, BOARD_RE_SEQ, BOARD_READCOUNT,
		BOARD_DATE)
		values
		(#{BOARD_NUM},
		#{BOARD_NAME}, #{BOARD_PASS}, #{BOARD_SUBJECT},
		#{BOARD_CONTENT}, #{BOARD_FILE, jdbcType=VARCHAR},
		#{BOARD_ORIGINAL, jdbcType=VARCHAR},
		#{BOARD_NUM},
		#{BOARD_RE_LEV}, #{BOARD_RE_SEQ}, #{BOARD_READCOUNT},
		sysdate)
	</insert>

	<update id="readCountUpdate" parameterType="int">
		update free_board
		set
		BOARD_READCOUNT = BOARD_READCOUNT + 1
		where BOARD_NUM = #{number}
	</update>

	<select id="detail" parameterType="int" resultType="board">
		select * from free_board where BOARD_NUM = #{number}
	</select>


	<update id="modify" parameterType="board">
		update free_board
		set
		BOARD_SUBJECT=#{BOARD_SUBJECT},
		BOARD_CONTENT=#{BOARD_CONTENT},
		BOARD_FILE=#{BOARD_FILE, jdbcType=VARCHAR},
		BOARD_ORIGINAL=#{BOARD_ORIGINAL, jdbcType=VARCHAR}
		where BOARD_NUM=#{BOARD_NUM}
	</update>


	<select id="boardWriter" parameterType="map" resultType="board">
		select * from free_board
		where BOARD_NUM=#{num}
		and BOARD_PASS=#{pass}
	</select>

	<update id="reply_update" parameterType="board">
		update free_board
		set BOARD_RE_SEQ = BOARD_RE_SEQ+1
		where BOARD_RE_REF = #{BOARD_RE_REF}
		and
		BOARD_RE_SEQ <![CDATA[>]]>
		#{BOARD_RE_SEQ}
	</update>


	<insert id="reply_insert" parameterType="board">
		<selectKey resultType="int" order="BEFORE"
			keyProperty="BOARD_NUM">
			select nvl(max(BOARD_NUM),0)+1 from free_board
		</selectKey>
		insert into free_board
		(BOARD_NUM,BOARD_NAME,BOARD_PASS, BOARD_SUBJECT,
		BOARD_CONTENT, BOARD_RE_REF, BOARD_RE_LEV,BOARD_RE_SEQ,
		BOARD_READCOUNT,BOARD_DATE)
		values(#{BOARD_NUM},
		#{BOARD_NAME},#{BOARD_PASS},#{BOARD_SUBJECT},
		#{BOARD_CONTENT}, #{BOARD_RE_REF},#{BOARD_RE_LEV},
		#{BOARD_RE_SEQ},#{BOARD_READCOUNT},sysdate)
	</insert>

	<delete id="delete" parameterType="board">
	<![CDATA[	
		delete from	 free_board 
		where 	 BOARD_RE_REF =  #{BOARD_RE_REF}
		and 	 BOARD_RE_LEV >= #{BOARD_RE_LEV}
		and 	 BOARD_RE_SEQ >= #{BOARD_RE_SEQ}
		and 	 BOARD_RE_SEQ <= (
									nvl((select min(board_re_seq)-1
									from 	free_board
									where 	BOARD_RE_REF = #{BOARD_RE_REF}
									and 	BOARD_RE_LEV = #{BOARD_RE_LEV}
									and 	BOARD_RE_SEQ > #{BOARD_RE_SEQ}),
									(select max(board_re_seq)
									from 	free_board
									where 	BOARD_RE_REF=#{BOARD_RE_REF}))
								  )
		]]>
	</delete>


	<insert id="insert_deleteFile" parameterType="String">
		insert into
		delete_file
		values(#{file})
	</insert>

	<select id="deleteFileList" resultType="String">
		select board_file from
		delete_file
	</select>


</mapper>